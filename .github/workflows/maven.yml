name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for Maven wrapper
        run: chmod +x mvnw

      - name: Build project
        run: ./mvnw clean package -DskipTests

     
      - name: Copy JAR to AWS EC2
        env:
          AWS_EC2_KEY: ${{ secrets.AWS_EC2_KEY }}
          AWS_EC2_USER: ${{ secrets.AWS_EC2_USER }}
          AWS_EC2_IP: ${{ secrets.AWS_EC2_IP }}
          AWS_EC2_PATH: ${{ secrets.AWS_EC2_PATH }}
        run: |
          echo "${{ secrets.AWS_EC2_KEY }}" > aws_key.pem
          chmod 400 aws_key.pem
          scp -i aws_key.pem target/*.jar ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_IP }}:${{ secrets.AWS_EC2_PATH }}

      
      - name: Restart application on EC2
        env:
          AWS_EC2_KEY: ${{ secrets.AWS_EC2_KEY }}
          AWS_EC2_USER: ${{ secrets.AWS_EC2_USER }}
          AWS_EC2_IP: ${{ secrets.AWS_EC2_IP }}
        run: |
          echo "${{ secrets.AWS_EC2_KEY }}" > aws_key.pem
          chmod 400 aws_key.pem
          ssh-keyscan -H ${{ secrets.AWS_EC2_IP }} >> ~/.ssh/known_hosts
          ssh -i aws_key.pem ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_IP }} << 'EOF'
          pkill -f 'java -jar' || echo "No previous process running"
          nohup java -jar ${{ secrets.AWS_EC2_PATH }}/back.jar > /dev/null 2>&1 &
          EOF
